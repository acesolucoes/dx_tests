#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Note: shader requires additional functionality:
//       Double-precision floating point
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | enableDoublePrecisionFloatOps
dcl_resource_raw t0
dcl_resource_raw t1
dcl_uav_raw u0
dcl_input vThreadID.x
dcl_temps 4
dcl_thread_group 1, 1, 1
ishl r0.x, vThreadID.x, l(4)
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.xyzw, r0.x, t0.zwxy
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r2.xyzw, r0.x, t1.zwxy
dadd r0.zw, r1.xyxy, r2.xyxy
mov r3.zw, r0.zzzw
iadd r3.x, r1.z, r2.z
add r3.y, r1.w, r2.w
store_raw u0.xyzw, r0.x, r3.xyzw
ret 
// Approximately 0 instruction slots used
#endif

const BYTE g_CSMain[] =
{
     68,  88,  66,  67, 204, 117, 
    245,  11,  49,  92, 126, 176, 
    144, 140, 182, 120, 211, 213, 
    164,  35,   1,   0,   0,   0, 
    160,   1,   0,   0,   4,   0, 
      0,   0,  48,   0,   0,   0, 
     64,   0,   0,   0,  80,   0, 
      0,   0, 144,   1,   0,   0, 
     73,  83,  71,  78,   8,   0, 
      0,   0,   0,   0,   0,   0, 
      8,   0,   0,   0,  79,  83, 
     71,  78,   8,   0,   0,   0, 
      0,   0,   0,   0,   8,   0, 
      0,   0,  83,  72,  69,  88, 
     56,   1,   0,   0,  80,   0, 
      5,   0,  78,   0,   0,   0, 
    106,  24,   0,   1, 161,   0, 
      0,   3,   0, 112,  16,   0, 
      0,   0,   0,   0, 161,   0, 
      0,   3,   0, 112,  16,   0, 
      1,   0,   0,   0, 157,   0, 
      0,   3,   0, 224,  17,   0, 
      0,   0,   0,   0,  95,   0, 
      0,   2,  18,   0,   2,   0, 
    104,   0,   0,   2,   4,   0, 
      0,   0, 155,   0,   0,   4, 
      1,   0,   0,   0,   1,   0, 
      0,   0,   1,   0,   0,   0, 
     41,   0,   0,   6,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,   2,   0,   1,  64, 
      0,   0,   4,   0,   0,   0, 
    165,   0,   0, 137, 194,   2, 
      0, 128, 131, 153,  25,   0, 
    242,   0,  16,   0,   1,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0, 230, 116, 
     16,   0,   0,   0,   0,   0, 
    165,   0,   0, 137, 194,   2, 
      0, 128, 131, 153,  25,   0, 
    242,   0,  16,   0,   2,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0, 230, 116, 
     16,   0,   1,   0,   0,   0, 
    191,   0,   0,   7, 194,   0, 
     16,   0,   0,   0,   0,   0, 
     70,   4,  16,   0,   1,   0, 
      0,   0,  70,   4,  16,   0, 
      2,   0,   0,   0,  54,   0, 
      0,   5, 194,   0,  16,   0, 
      3,   0,   0,   0, 166,  14, 
     16,   0,   0,   0,   0,   0, 
     30,   0,   0,   7,  18,   0, 
     16,   0,   3,   0,   0,   0, 
     42,   0,  16,   0,   1,   0, 
      0,   0,  42,   0,  16,   0, 
      2,   0,   0,   0,   0,   0, 
      0,   7,  34,   0,  16,   0, 
      3,   0,   0,   0,  58,   0, 
     16,   0,   1,   0,   0,   0, 
     58,   0,  16,   0,   2,   0, 
      0,   0, 166,   0,   0,   7, 
    242, 224,  17,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,  70,  14, 
     16,   0,   3,   0,   0,   0, 
     62,   0,   0,   1,  83,  70, 
     73,  48,   8,   0,   0,   0, 
      1,   0,   0,   0,   0,   0, 
      0,   0
};
